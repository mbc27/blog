{"version":3,"file":"js/128.78110bb0.js","mappings":"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","sources":["webpack://blog-frontend/./src/views/admin/PhotoCategoryManagement.vue","webpack://blog-frontend/src/views/admin/PhotoCategoryManagement.vue","webpack://blog-frontend/./src/views/admin/PhotoCategoryManagement.vue?652c","webpack://blog-frontend/./src/views/admin/PhotoCategoryManagement.vue?266d"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"photo-category-management\"},[_c('el-card',{attrs:{\"shadow\":\"hover\"}},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"相册分类管理\")]),_c('el-button',{staticStyle:{\"float\":\"right\"},attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.handleAddCategory}},[_vm._v(\"新增分类\")])],1),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.categories}},[_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":\"ID\",\"width\":\"80\"}}),_c('el-table-column',{attrs:{\"prop\":\"categoryName\",\"label\":\"分类名称\",\"width\":\"180\"}}),_c('el-table-column',{attrs:{\"prop\":\"photoCount\",\"label\":\"照片数量\",\"width\":\"100\"}}),_c('el-table-column',{attrs:{\"prop\":\"description\",\"label\":\"描述\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tooltip',{attrs:{\"content\":scope.row.description,\"placement\":\"top\",\"disabled\":!scope.row.description || scope.row.description.length < 30}},[_c('span',[_vm._v(_vm._s(_vm._f(\"ellipsis\")(scope.row.description,30)))])])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"createTime\",\"label\":\"创建时间\",\"width\":\"180\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"200\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.handleEdit(scope.row)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"disabled\":scope.row.photoCount > 0},on:{\"click\":function($event){return _vm.handleDelete(scope.row)}}},[_vm._v(\"删除\")])]}}])})],1),_c('div',{staticClass:\"pagination-container\"},[_c('el-pagination',{attrs:{\"current-page\":_vm.pagination.current,\"page-sizes\":[10, 20, 30, 50],\"page-size\":_vm.pagination.size,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.pagination.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1)],1),_c('el-dialog',{attrs:{\"title\":_vm.dialogTitle,\"visible\":_vm.dialogVisible,\"width\":\"500px\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('el-form',{ref:\"categoryForm\",attrs:{\"model\":_vm.categoryForm,\"rules\":_vm.categoryRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称\",\"prop\":\"categoryName\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入分类名称\"},model:{value:(_vm.categoryForm.categoryName),callback:function ($$v) {_vm.$set(_vm.categoryForm, \"categoryName\", $$v)},expression:\"categoryForm.categoryName\"}})],1),_c('el-form-item',{attrs:{\"label\":\"分类描述\",\"prop\":\"description\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":3,\"placeholder\":\"请输入分类描述\"},model:{value:(_vm.categoryForm.description),callback:function ($$v) {_vm.$set(_vm.categoryForm, \"description\", $$v)},expression:\"categoryForm.description\"}})],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.submitLoading},on:{\"click\":_vm.submitCategory}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"photo-category-management\">\n    <el-card shadow=\"hover\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>相册分类管理</span>\n        <el-button style=\"float: right\" type=\"primary\" size=\"small\" @click=\"handleAddCategory\">新增分类</el-button>\n      </div>\n      \n      <el-table\n        :data=\"categories\"\n        style=\"width: 100%\"\n        v-loading=\"loading\">\n        <el-table-column\n          prop=\"id\"\n          label=\"ID\"\n          width=\"80\">\n        </el-table-column>\n        <el-table-column\n          prop=\"categoryName\"\n          label=\"分类名称\"\n          width=\"180\">\n        </el-table-column>\n        <el-table-column\n          prop=\"photoCount\"\n          label=\"照片数量\"\n          width=\"100\">\n        </el-table-column>\n        <el-table-column\n          prop=\"description\"\n          label=\"描述\">\n          <template slot-scope=\"scope\">\n            <el-tooltip :content=\"scope.row.description\" placement=\"top\" :disabled=\"!scope.row.description || scope.row.description.length < 30\">\n              <span>{{ scope.row.description | ellipsis(30) }}</span>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n        <el-table-column\n          prop=\"createTime\"\n          label=\"创建时间\"\n          width=\"180\">\n        </el-table-column>\n        <el-table-column\n          label=\"操作\"\n          width=\"200\">\n          <template slot-scope=\"scope\">\n            <el-button\n              size=\"mini\"\n              @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              @click=\"handleDelete(scope.row)\"\n              :disabled=\"scope.row.photoCount > 0\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <div class=\"pagination-container\">\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"pagination.current\"\n          :page-sizes=\"[10, 20, 30, 50]\"\n          :page-size=\"pagination.size\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"pagination.total\">\n        </el-pagination>\n      </div>\n    </el-card>\n\n    <!-- 分类编辑对话框 -->\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\" width=\"500px\">\n      <el-form :model=\"categoryForm\" :rules=\"categoryRules\" ref=\"categoryForm\" label-width=\"100px\">\n        <el-form-item label=\"分类名称\" prop=\"categoryName\">\n          <el-input v-model=\"categoryForm.categoryName\" placeholder=\"请输入分类名称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"分类描述\" prop=\"description\">\n          <el-input type=\"textarea\" v-model=\"categoryForm.description\" :rows=\"3\" placeholder=\"请输入分类描述\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitCategory\" :loading=\"submitLoading\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'PhotoCategoryManagement',\n  data() {\n    return {\n      categories: [],\n      loading: false,\n      pagination: {\n        current: 1,\n        size: 10,\n        total: 0\n      },\n      dialogVisible: false,\n      dialogTitle: '新增相册分类',\n      categoryForm: {\n        id: null,\n        categoryName: '',\n        description: '',\n        coverUrl: ''\n      },\n      categoryRules: {\n        categoryName: [\n          { required: true, message: '请输入分类名称', trigger: 'blur' },\n          { max: 50, message: '长度不能超过50个字符', trigger: 'blur' }\n        ],\n        description: [\n          { max: 200, message: '长度不能超过200个字符', trigger: 'blur' }\n        ]\n      },\n      submitLoading: false\n    }\n  },\n  computed: {\n    ...mapGetters(['token']),\n    uploadHeaders() {\n      const token = localStorage.getItem('token')\n      return {\n        'Authorization': token ? `Bearer ${token}` : ''\n      }\n    }\n  },\n  filters: {\n    ellipsis(value, maxLength) {\n      if (!value) return ''\n      if (value.length <= maxLength) return value\n      return value.slice(0, maxLength) + '...'\n    }\n  },\n  created() {\n    this.fetchCategories()\n  },\n  methods: {\n    fetchCategories() {\n      this.loading = true\n      const params = {\n        current: this.pagination.current,\n        size: this.pagination.size\n      }\n      \n      const token = localStorage.getItem('token')\n      axios.get('/api/admin/photo/categories', { \n        params,\n        headers: {\n          'Authorization': token ? `Bearer ${token}` : ''\n        }\n      })\n        .then(response => {\n          console.log('API响应:', response.data)\n          if (response.data && response.data.data) {\n            this.categories = response.data.data.records || []\n            this.pagination.total = response.data.data.total || 0\n          } else {\n            this.categories = []\n            this.pagination.total = 0\n          }\n        })\n        .catch(error => {\n          console.error('获取相册分类列表失败', error)\n          this.$message.error('获取相册分类列表失败')\n        })\n        .finally(() => {\n          this.loading = false\n        })\n    },\n    handleSizeChange(val) {\n      this.pagination.size = val\n      this.fetchCategories()\n    },\n    handleCurrentChange(val) {\n      this.pagination.current = val\n      this.fetchCategories()\n    },\n    handleAddCategory() {\n      this.dialogTitle = '新增相册分类'\n      this.categoryForm = {\n        id: null,\n        categoryName: '',\n        description: '',\n        coverUrl: ''\n      }\n      this.dialogVisible = true\n      this.$nextTick(() => {\n        this.$refs.categoryForm && this.$refs.categoryForm.clearValidate()\n      })\n    },\n    handleEdit(row) {\n      this.dialogTitle = '编辑相册分类'\n      this.categoryForm = {\n        id: row.id,\n        categoryName: row.categoryName,\n        description: row.description\n      }\n      this.dialogVisible = true\n      this.$nextTick(() => {\n        this.$refs.categoryForm && this.$refs.categoryForm.clearValidate()\n      })\n    },\n    handleDelete(row) {\n      if (row.photoCount > 0) {\n        this.$message.warning('该分类下有照片，不能删除')\n        return\n      }\n      \n      this.$confirm('确认删除该相册分类吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        const token = localStorage.getItem('token')\n        axios.delete(`/api/admin/photo/categories/${row.id}`, {\n          headers: {\n            'Authorization': token ? `Bearer ${token}` : ''\n          }\n        })\n          .then(() => {\n            this.$message.success('删除成功')\n            this.fetchCategories()\n          })\n          .catch(error => {\n            console.error('删除相册分类失败', error)\n            this.$message.error('删除相册分类失败')\n          })\n      }).catch(() => {})\n    },\n    handleCoverSuccess(res) {\n      this.categoryForm.coverUrl = res.data\n      this.$message.success('封面上传成功')\n    },\n    beforeCoverUpload(file) {\n      const isImage = file.type.startsWith('image/')\n      const isLt2M = file.size / 1024 / 1024 < 2\n\n      if (!isImage) {\n        this.$message.error('上传封面只能是图片格式!')\n      }\n      if (!isLt2M) {\n        this.$message.error('上传封面大小不能超过 2MB!')\n      }\n      return isImage && isLt2M\n    },\n    submitCategory() {\n      this.$refs.categoryForm.validate(valid => {\n        if (valid) {\n          this.submitLoading = true\n          const method = this.categoryForm.id ? 'put' : 'post'\n          const url = this.categoryForm.id ? `/api/admin/photo/categories/${this.categoryForm.id}` : '/api/admin/photo/categories'\n          \n          const token = localStorage.getItem('token')\n          const config = {\n            headers: {\n              'Authorization': token ? `Bearer ${token}` : ''\n            }\n          }\n          \n          axios[method](url, this.categoryForm, config)\n            .then(() => {\n              this.$message.success(`${this.categoryForm.id ? '更新' : '添加'}相册分类成功`)\n              this.dialogVisible = false\n              this.fetchCategories()\n            })\n            .catch(error => {\n              console.error(`${this.categoryForm.id ? '更新' : '添加'}相册分类失败`, error)\n              this.$message.error(`${this.categoryForm.id ? '更新' : '添加'}相册分类失败`)\n            })\n            .finally(() => {\n              this.submitLoading = false\n            })\n        } else {\n          return false\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.photo-category-management {\n  padding: 20px;\n}\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409EFF;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 178px;\n  height: 178px;\n  line-height: 178px;\n  text-align: center;\n}\n.avatar {\n  width: 178px;\n  height: 178px;\n  display: block;\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PhotoCategoryManagement.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PhotoCategoryManagement.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./PhotoCategoryManagement.vue?vue&type=template&id=232245b0&scoped=true\"\nimport script from \"./PhotoCategoryManagement.vue?vue&type=script&lang=js\"\nexport * from \"./PhotoCategoryManagement.vue?vue&type=script&lang=js\"\nimport style0 from \"./PhotoCategoryManagement.vue?vue&type=style&index=0&id=232245b0&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"232245b0\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","slot","_v","staticStyle","on","handleAddCategory","directives","name","rawName","value","loading","expression","categories","scopedSlots","_u","key","fn","scope","row","description","length","_s","_f","$event","handleEdit","photoCount","handleDelete","pagination","current","size","total","handleSizeChange","handleCurrentChange","dialogTitle","dialogVisible","ref","categoryForm","categoryRules","model","categoryName","callback","$$v","$set","submitLoading","submitCategory","staticRenderFns","data","id","coverUrl","required","message","trigger","max","computed","_objectSpread","mapGetters","uploadHeaders","token","localStorage","getItem","concat","filters","ellipsis","maxLength","slice","created","fetchCategories","methods","_this","params","axios","headers","then","response","console","log","records","error","$message","val","_this2","$nextTick","$refs","clearValidate","_this3","_this4","warning","$confirm","confirmButtonText","cancelButtonText","type","success","handleCoverSuccess","res","beforeCoverUpload","file","isImage","startsWith","isLt2M","_this5","validate","valid","method","url","config","component"],"sourceRoot":""}